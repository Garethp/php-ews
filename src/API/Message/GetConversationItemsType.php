<?php

namespace garethp\ews\API\Message;

/**
 * Class representing GetConversationItemsType
 *
 *
 * XSD Type: GetConversationItemsType
 */
class GetConversationItemsType extends BaseRequestType
{

    /**
     * @var \garethp\ews\API\Type\ItemResponseShapeType
     */
    protected $itemShape = null;

    /**
     * @var \garethp\ews\API\Type\NonEmptyArrayOfBaseFolderIdsType
     */
    protected $foldersToIgnore = null;

    /**
     * @var integer
     */
    protected $maxItemsToReturn = null;

    /**
     * @var string
     */
    protected $sortOrder = null;

    /**
     * @var string
     */
    protected $mailboxScope = null;

    /**
     * @var \garethp\ews\API\Type\ConversationRequestType[]
     */
    protected $conversations = null;

    /**
     * @autogenerated This method is safe to replace
     * @return \garethp\ews\API\Type\ItemResponseShapeType
     */
    public function getItemShape()
    {
        return $this->itemShape;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value \garethp\ews\API\Type\ItemResponseShapeType
     * @return GetConversationItemsType
     */
    public function setItemShape(\garethp\ews\API\Type\ItemResponseShapeType $value)
    {
        $this->itemShape = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return \garethp\ews\API\Type\NonEmptyArrayOfBaseFolderIdsType
     */
    public function getFoldersToIgnore()
    {
        return $this->foldersToIgnore;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value \garethp\ews\API\Type\NonEmptyArrayOfBaseFolderIdsType
     * @return GetConversationItemsType
     */
    public function setFoldersToIgnore(\garethp\ews\API\Type\NonEmptyArrayOfBaseFolderIdsType $value)
    {
        $this->foldersToIgnore = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return integer
     */
    public function getMaxItemsToReturn()
    {
        return $this->maxItemsToReturn;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value int
     * @return GetConversationItemsType
     */
    public function setMaxItemsToReturn($value)
    {
        $this->maxItemsToReturn = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return string
     */
    public function getSortOrder()
    {
        return $this->sortOrder;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return GetConversationItemsType
     */
    public function setSortOrder($value)
    {
        $this->sortOrder = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return string
     */
    public function getMailboxScope()
    {
        return $this->mailboxScope;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return GetConversationItemsType
     */
    public function setMailboxScope($value)
    {
        $this->mailboxScope = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value \garethp\ews\API\Type\ConversationRequestType
     * @return GetConversationItemsType
     */
    public function addConversations(\garethp\ews\API\Type\ConversationRequestType $value)
    {
        if ($this->conversations === null) {
                        $this->conversations = array();
        }

        if (!is_array($this->conversations)) {
            $this->conversations = array($this->conversations);
        }

        $this->conversations[] = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return \garethp\ews\API\Type\ConversationRequestType[]
     */
    public function getConversations()
    {
        return $this->conversations;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value
     * \garethp\ews\API\Type\ConversationRequestType[]|\garethp\ews\API\Type\ConversationRequestType
     * @return GetConversationItemsType
     */
    public function setConversations(array|\garethp\ews\API\Type\ConversationRequestType $value)
    {
        if (!is_array($value)) {
            $value = [$value];
        }
        $this->conversations = $value;
        return $this;
    }
}
