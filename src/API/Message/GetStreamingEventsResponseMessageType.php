<?php

namespace garethp\ews\API\Message;

/**
 * Class representing GetStreamingEventsResponseMessageType
 *
 *
 * XSD Type: GetStreamingEventsResponseMessageType
 */
class GetStreamingEventsResponseMessageType extends ResponseMessageType
{

    /**
     * @var \garethp\ews\API\Type\NotificationType[]
     */
    protected $notifications = null;

    /**
     * @var string[]
     */
    protected $errorSubscriptionIds = null;

    /**
     * @var string
     */
    protected $connectionStatus = null;

    /**
     * @autogenerated This method is safe to replace
     * @param $value \garethp\ews\API\Type\NotificationType
     * @return GetStreamingEventsResponseMessageType
     */
    public function addNotifications(\garethp\ews\API\Type\NotificationType $value)
    {
        $value = $this->castValueIfNeeded("notifications", $value);

        if ($this->notifications === null) {
            $this->notifications = array();
        }

        if (!is_array($this->notifications)) {
            $this->notifications = array($this->notifications);
        }

        $this->notifications[] = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return \garethp\ews\API\Type\NotificationType[]
     */
    public function getNotifications()
    {
        return $this->notifications;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value
     * \garethp\ews\API\Type\NotificationType[]|\garethp\ews\API\Type\NotificationType
     * @return GetStreamingEventsResponseMessageType
     */
    public function setNotifications(array|\garethp\ews\API\Type\NotificationType $value)
    {
        if (!is_array($value)) {
            $value = [$value];
        }
        $this->notifications = $this->castValueIfNeeded("notifications", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return GetStreamingEventsResponseMessageType
     */
    public function addErrorSubscriptionIds($value)
    {
        $value = $this->castValueIfNeeded("errorSubscriptionIds", $value);

        if ($this->errorSubscriptionIds === null) {
            $this->errorSubscriptionIds = array();
        }

        if (!is_array($this->errorSubscriptionIds)) {
            $this->errorSubscriptionIds = array($this->errorSubscriptionIds);
        }

        $this->errorSubscriptionIds[] = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return string[]
     */
    public function getErrorSubscriptionIds()
    {
        return $this->errorSubscriptionIds;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string[]|string
     * @return GetStreamingEventsResponseMessageType
     */
    public function setErrorSubscriptionIds(array|string $value)
    {
        if (!is_array($value)) {
            $value = [$value];
        }
        $this->errorSubscriptionIds = $this->castValueIfNeeded("errorSubscriptionIds", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return string
     */
    public function getConnectionStatus()
    {
        return $this->connectionStatus;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return GetStreamingEventsResponseMessageType
     */
    public function setConnectionStatus($value)
    {
        $this->connectionStatus = $this->castValueIfNeeded("connectionStatus", $value);
        return $this;
    }
}
