<?php

namespace garethp\ews\API\Message;

/**
 * Class representing PerformInstantSearchRequestType
 *
 *
 * XSD Type: PerformInstantSearchRequest
 */
class PerformInstantSearchRequestType extends BaseRequestType
{

    /**
     * @var string
     */
    protected $searchSessionId = null;

    /**
     * @var string[]
     */
    protected $itemType = null;

    /**
     * @var string[]
     */
    protected $queryOptions = null;

    /**
     * @var integer
     */
    protected $searchRequestId = null;

    /**
     * @var string
     */
    protected $kqlQuery = null;

    /**
     * @var \garethp\ews\API\Type\FolderIdType[]
     */
    protected $folderScope = null;

    /**
     * @var \garethp\ews\API\Type\DistinguishedFolderIdType[]
     */
    protected $distinguishedFolderScope = null;

    /**
     * @var boolean
     */
    protected $isDeepTraversal = null;

    /**
     * @var boolean
     */
    protected $waitOnSearchResults = null;

    /**
     * @autogenerated This method is safe to replace
     * @return string
     */
    public function getSearchSessionId()
    {
        return $this->searchSessionId;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return PerformInstantSearchRequestType
     */
    public function setSearchSessionId($value)
    {
        $this->searchSessionId = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return PerformInstantSearchRequestType
     */
    public function addItemType($value)
    {
        if ($this->itemType === null) {
                        $this->itemType = array();
        }

        if (!is_array($this->itemType)) {
            $this->itemType = array($this->itemType);
        }

        $this->itemType[] = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return string[]
     */
    public function getItemType()
    {
        return $this->itemType;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string[]|string
     * @return PerformInstantSearchRequestType
     */
    public function setItemType(array|string $value)
    {
        if (!is_array($value)) {
            $value = [$value];
        }
        $this->itemType = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return PerformInstantSearchRequestType
     */
    public function addQueryOptions($value)
    {
        if ($this->queryOptions === null) {
                        $this->queryOptions = array();
        }

        if (!is_array($this->queryOptions)) {
            $this->queryOptions = array($this->queryOptions);
        }

        $this->queryOptions[] = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return string[]
     */
    public function getQueryOptions()
    {
        return $this->queryOptions;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string[]|string
     * @return PerformInstantSearchRequestType
     */
    public function setQueryOptions(array|string $value)
    {
        if (!is_array($value)) {
            $value = [$value];
        }
        $this->queryOptions = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return integer
     */
    public function getSearchRequestId()
    {
        return $this->searchRequestId;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value int
     * @return PerformInstantSearchRequestType
     */
    public function setSearchRequestId($value)
    {
        $this->searchRequestId = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return string
     */
    public function getKqlQuery()
    {
        return $this->kqlQuery;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return PerformInstantSearchRequestType
     */
    public function setKqlQuery($value)
    {
        $this->kqlQuery = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value \garethp\ews\API\Type\FolderIdType
     * @return PerformInstantSearchRequestType
     */
    public function addFolderScope(\garethp\ews\API\Type\FolderIdType $value)
    {
        if ($this->folderScope === null) {
                        $this->folderScope = array();
        }

        if (!is_array($this->folderScope)) {
            $this->folderScope = array($this->folderScope);
        }

        $this->folderScope[] = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return \garethp\ews\API\Type\FolderIdType[]
     */
    public function getFolderScope()
    {
        return $this->folderScope;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value
     * \garethp\ews\API\Type\FolderIdType[]|\garethp\ews\API\Type\FolderIdType
     * @return PerformInstantSearchRequestType
     */
    public function setFolderScope(array|\garethp\ews\API\Type\FolderIdType $value)
    {
        if (!is_array($value)) {
            $value = [$value];
        }
        $this->folderScope = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value \garethp\ews\API\Type\DistinguishedFolderIdType
     * @return PerformInstantSearchRequestType
     */
    public function addDistinguishedFolderScope(\garethp\ews\API\Type\DistinguishedFolderIdType $value)
    {
        if ($this->distinguishedFolderScope === null) {
                        $this->distinguishedFolderScope = array();
        }

        if (!is_array($this->distinguishedFolderScope)) {
            $this->distinguishedFolderScope = array($this->distinguishedFolderScope);
        }

        $this->distinguishedFolderScope[] = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return \garethp\ews\API\Type\DistinguishedFolderIdType[]
     */
    public function getDistinguishedFolderScope()
    {
        return $this->distinguishedFolderScope;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value
     * \garethp\ews\API\Type\DistinguishedFolderIdType[]|\garethp\ews\API\Type\DistinguishedFolderIdType
     * @return PerformInstantSearchRequestType
     */
    public function setDistinguishedFolderScope(array|\garethp\ews\API\Type\DistinguishedFolderIdType $value)
    {
        if (!is_array($value)) {
            $value = [$value];
        }
        $this->distinguishedFolderScope = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return bool
     */
    public function isDeepTraversal()
    {
        return ((bool) $this->isDeepTraversal);
    }

    /**
     * @autogenerated This method is safe to replace
     * @return boolean
     */
    public function getIsDeepTraversal()
    {
        return $this->isDeepTraversal;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value bool
     * @return PerformInstantSearchRequestType
     */
    public function setIsDeepTraversal($value)
    {
        $this->isDeepTraversal = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return bool
     */
    public function isWaitOnSearchResults()
    {
        return ((bool) $this->waitOnSearchResults);
    }

    /**
     * @autogenerated This method is safe to replace
     * @return boolean
     */
    public function getWaitOnSearchResults()
    {
        return $this->waitOnSearchResults;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value bool
     * @return PerformInstantSearchRequestType
     */
    public function setWaitOnSearchResults($value)
    {
        $this->waitOnSearchResults = $value;
        return $this;
    }
}
