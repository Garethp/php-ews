<?php

namespace garethp\ews\API\Message;

use garethp\ews\API\Message;

/**
 * Class representing GetUserOofSettingsResponseType
 *
 *
 * XSD Type: GetUserOofSettingsResponse
 */
class GetUserOofSettingsResponseType extends Message
{

    /**
     * @var \garethp\ews\API\Message\ResponseMessageType
     */
    protected $responseMessage = null;

    /**
     * @var \garethp\ews\API\Type\OofSettings
     */
    protected $oofSettings = null;

    /**
     * @var string
     */
    protected $allowExternalOof = null;

    /**
     * @return ResponseMessageType
     */
    public function getResponseMessage()
    {
        return $this->responseMessage;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value ResponseMessageType
     * @return GetUserOofSettingsResponseType
     */
    public function setResponseMessage(ResponseMessageType $value)
    {
        $this->responseMessage = $this->castValueIfNeeded("responseMessage", $value);
        return $this;
    }

    /**
     * @return \garethp\ews\API\Type\OofSettings
     */
    public function getOofSettings()
    {
        return $this->oofSettings;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value \garethp\ews\API\Type\OofSettings
     * @return GetUserOofSettingsResponseType
     */
    public function setOofSettings(\garethp\ews\API\Type\OofSettings $value)
    {
        $this->oofSettings = $this->castValueIfNeeded("oofSettings", $value);
        return $this;
    }

    /**
     * @return string
     */
    public function getAllowExternalOof()
    {
        return $this->allowExternalOof;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return GetUserOofSettingsResponseType
     */
    public function setAllowExternalOof($value)
    {
        $this->allowExternalOof = $this->castValueIfNeeded("allowExternalOof", $value);
        return $this;
    }
}
