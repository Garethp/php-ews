<?php

namespace garethp\ews\API\Type;

use garethp\ews\API\Type;

/**
 * Class representing ItemResponseShapeType
 *
 *
 * XSD Type: ItemResponseShapeType
 */
class ItemResponseShapeType extends Type
{

    /**
     * @var string
     */
    protected $baseShape = null;

    /**
     * @var boolean
     */
    protected $includeMimeContent = null;

    /**
     * @var string
     */
    protected $bodyType = null;

    /**
     * @var boolean
     */
    protected $filterHtmlContent = null;

    /**
     * @var boolean
     */
    protected $convertHtmlCodePageToUTF8 = null;

    /**
     * @var \garethp\ews\API\Type\NonEmptyArrayOfPathsToElementType
     */
    protected $additionalProperties = null;

    /**
     * @var string
     */
    protected $uniqueBodyType = null;

    /**
     * @var string
     */
    protected $normalizedBodyType = null;

    /**
     * @var string
     */
    protected $inlineImageUrlTemplate = null;

    /**
     * @var boolean
     */
    protected $blockExternalImages = null;

    /**
     * @var boolean
     */
    protected $addBlankTargetToLinks = null;

    /**
     * @var integer
     */
    protected $maximumBodySize = null;

    /**
     * @autogenerated This method is safe to replace
     * @return string
     */
    public function getBaseShape()
    {
        return $this->baseShape;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return ItemResponseShapeType
     */
    public function setBaseShape($value)
    {
        $this->baseShape = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return bool
     */
    public function isIncludeMimeContent()
    {
        return ((bool) $this->includeMimeContent);
    }

    /**
     * @autogenerated This method is safe to replace
     * @return boolean
     */
    public function getIncludeMimeContent()
    {
        return $this->includeMimeContent;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value bool
     * @return ItemResponseShapeType
     */
    public function setIncludeMimeContent($value)
    {
        $this->includeMimeContent = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return string
     */
    public function getBodyType()
    {
        return $this->bodyType;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return ItemResponseShapeType
     */
    public function setBodyType($value)
    {
        $this->bodyType = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return string
     */
    public function getUniqueBodyType()
    {
        return $this->uniqueBodyType;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return ItemResponseShapeType
     */
    public function setUniqueBodyType($value)
    {
        $this->uniqueBodyType = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return string
     */
    public function getNormalizedBodyType()
    {
        return $this->normalizedBodyType;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return ItemResponseShapeType
     */
    public function setNormalizedBodyType($value)
    {
        $this->normalizedBodyType = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return bool
     */
    public function isFilterHtmlContent()
    {
        return ((bool) $this->filterHtmlContent);
    }

    /**
     * @autogenerated This method is safe to replace
     * @return boolean
     */
    public function getFilterHtmlContent()
    {
        return $this->filterHtmlContent;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value bool
     * @return ItemResponseShapeType
     */
    public function setFilterHtmlContent($value)
    {
        $this->filterHtmlContent = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return bool
     */
    public function isConvertHtmlCodePageToUTF8()
    {
        return ((bool) $this->convertHtmlCodePageToUTF8);
    }

    /**
     * @autogenerated This method is safe to replace
     * @return boolean
     */
    public function getConvertHtmlCodePageToUTF8()
    {
        return $this->convertHtmlCodePageToUTF8;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value bool
     * @return ItemResponseShapeType
     */
    public function setConvertHtmlCodePageToUTF8($value)
    {
        $this->convertHtmlCodePageToUTF8 = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return string
     */
    public function getInlineImageUrlTemplate()
    {
        return $this->inlineImageUrlTemplate;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return ItemResponseShapeType
     */
    public function setInlineImageUrlTemplate($value)
    {
        $this->inlineImageUrlTemplate = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return bool
     */
    public function isBlockExternalImages()
    {
        return ((bool) $this->blockExternalImages);
    }

    /**
     * @autogenerated This method is safe to replace
     * @return boolean
     */
    public function getBlockExternalImages()
    {
        return $this->blockExternalImages;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value bool
     * @return ItemResponseShapeType
     */
    public function setBlockExternalImages($value)
    {
        $this->blockExternalImages = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return bool
     */
    public function isAddBlankTargetToLinks()
    {
        return ((bool) $this->addBlankTargetToLinks);
    }

    /**
     * @autogenerated This method is safe to replace
     * @return boolean
     */
    public function getAddBlankTargetToLinks()
    {
        return $this->addBlankTargetToLinks;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value bool
     * @return ItemResponseShapeType
     */
    public function setAddBlankTargetToLinks($value)
    {
        $this->addBlankTargetToLinks = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return integer
     */
    public function getMaximumBodySize()
    {
        return $this->maximumBodySize;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value int
     * @return ItemResponseShapeType
     */
    public function setMaximumBodySize($value)
    {
        $this->maximumBodySize = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return NonEmptyArrayOfPathsToElementType
     */
    public function getAdditionalProperties()
    {
        return $this->additionalProperties;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value NonEmptyArrayOfPathsToElementType
     * @return ItemResponseShapeType
     */
    public function setAdditionalProperties(NonEmptyArrayOfPathsToElementType $value)
    {
        $this->additionalProperties = $value;
        return $this;
    }
}
