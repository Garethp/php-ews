<?php

namespace garethp\ews\API\Type;

use garethp\ews\API\Type;

/**
 * Class representing FieldURIOrConstantType
 *
 *
 * XSD Type: FieldURIOrConstantType
 */
class FieldURIOrConstantType extends Type
{

    /**
     * @var \garethp\ews\API\Type\FieldURI
     */
    protected $fieldURI = null;

    /**
     * @var \garethp\ews\API\Type\IndexedFieldURI
     */
    protected $indexedFieldURI = null;

    /**
     * @var \garethp\ews\API\Type\ExtendedFieldURI
     */
    protected $extendedFieldURI = null;

    /**
     * @var \garethp\ews\API\Type\ConstantValueType
     */
    protected $constant = null;

    /**
     * @return FieldURI
     */
    public function getFieldURI()
    {
        return $this->fieldURI;
    }

    /**
     * @return IndexedFieldURI
     */
    public function getIndexedFieldURI()
    {
        return $this->indexedFieldURI;
    }

    /**
     * @return ExtendedFieldURI
     */
    public function getExtendedFieldURI()
    {
        return $this->extendedFieldURI;
    }

    /**
     * @return ConstantValueType
     */
    public function getConstant()
    {
        return $this->constant;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value FieldURI
     * @return FieldURIOrConstantType
     */
    public function setFieldURI(FieldURI $value)
    {
        $this->fieldURI = $this->castValueIfNeeded("fieldURI", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value IndexedFieldURI
     * @return FieldURIOrConstantType
     */
    public function setIndexedFieldURI(IndexedFieldURI $value)
    {
        $this->indexedFieldURI = $this->castValueIfNeeded("indexedFieldURI", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value ExtendedFieldURI
     * @return FieldURIOrConstantType
     */
    public function setExtendedFieldURI(ExtendedFieldURI $value)
    {
        $this->extendedFieldURI = $this->castValueIfNeeded("extendedFieldURI", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value ConstantValueType
     * @return FieldURIOrConstantType
     */
    public function setConstant(ConstantValueType $value)
    {
        $this->constant = $this->castValueIfNeeded("constant", $value);
        return $this;
    }
}
