<?php

namespace garethp\ews\API\Type;

use garethp\ews\API\Type;

/**
 * Class representing ConversationType
 *
 *
 * XSD Type: ConversationType
 */
class ConversationType extends Type
{

    /**
     * @var \garethp\ews\API\Type\ItemIdType
     */
    protected $conversationId = null;

    /**
     * @var string
     */
    protected $conversationTopic = null;

    /**
     * @var string[]
     */
    protected $uniqueRecipients = null;

    /**
     * @var string[]
     */
    protected $globalUniqueRecipients = null;

    /**
     * @var string[]
     */
    protected $uniqueUnreadSenders = null;

    /**
     * @var string[]
     */
    protected $globalUniqueUnreadSenders = null;

    /**
     * @var string[]
     */
    protected $uniqueSenders = null;

    /**
     * @var string[]
     */
    protected $globalUniqueSenders = null;

    /**
     * @var \DateTime
     */
    protected $lastDeliveryTime = null;

    protected $_typeMap = array(
        'lastDeliveryTime' => 'dateTime',
        'globalLastDeliveryTime' => 'dateTime',
    );

    /**
     * @var \DateTime
     */
    protected $globalLastDeliveryTime = null;

    /**
     * @var string[]
     */
    protected $categories = null;

    /**
     * @var string[]
     */
    protected $globalCategories = null;

    /**
     * @var string
     */
    protected $flagStatus = null;

    /**
     * @var string
     */
    protected $globalFlagStatus = null;

    /**
     * @var boolean
     */
    protected $hasAttachments = null;

    /**
     * @var boolean
     */
    protected $globalHasAttachments = null;

    /**
     * @var integer
     */
    protected $messageCount = null;

    /**
     * @var integer
     */
    protected $globalMessageCount = null;

    /**
     * @var integer
     */
    protected $unreadCount = null;

    /**
     * @var integer
     */
    protected $globalUnreadCount = null;

    /**
     * @var integer
     */
    protected $size = null;

    /**
     * @var integer
     */
    protected $globalSize = null;

    /**
     * @var string[]
     */
    protected $itemClasses = null;

    /**
     * @var string[]
     */
    protected $globalItemClasses = null;

    /**
     * @var string
     */
    protected $importance = null;

    /**
     * @var string
     */
    protected $globalImportance = null;

    /**
     * @var \garethp\ews\API\Type\NonEmptyArrayOfBaseItemIdsType
     */
    protected $itemIds = null;

    /**
     * @var \garethp\ews\API\Type\NonEmptyArrayOfBaseItemIdsType
     */
    protected $globalItemIds = null;

    /**
     * @autogenerated This method is safe to replace
     * @return ItemIdType
     */
    public function getConversationId()
    {
        return $this->conversationId;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value ItemIdType
     * @return ConversationType
     */
    public function setConversationId(ItemIdType $value)
    {
        $this->conversationId = $this->castValueIfNeeded("conversationId", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return string
     */
    public function getConversationTopic()
    {
        return $this->conversationTopic;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return ConversationType
     */
    public function setConversationTopic($value)
    {
        $this->conversationTopic = $this->castValueIfNeeded("conversationTopic", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return ConversationType
     */
    public function addUniqueRecipients($value)
    {
        $value = $this->castValueIfNeeded("uniqueRecipients", $value);

        if ($this->uniqueRecipients === null) {
            $this->uniqueRecipients = array();
        }

        if (!is_array($this->uniqueRecipients)) {
            $this->uniqueRecipients = array($this->uniqueRecipients);
        }

        $this->uniqueRecipients[] = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return string[]
     */
    public function getUniqueRecipients()
    {
        return $this->uniqueRecipients;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string[]
     * @return ConversationType
     */
    public function setUniqueRecipients(array $value)
    {
        $this->uniqueRecipients = $this->castValueIfNeeded("uniqueRecipients", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return ConversationType
     */
    public function addGlobalUniqueRecipients($value)
    {
        $value = $this->castValueIfNeeded("globalUniqueRecipients", $value);

        if ($this->globalUniqueRecipients === null) {
            $this->globalUniqueRecipients = array();
        }

        if (!is_array($this->globalUniqueRecipients)) {
            $this->globalUniqueRecipients = array($this->globalUniqueRecipients);
        }

        $this->globalUniqueRecipients[] = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return string[]
     */
    public function getGlobalUniqueRecipients()
    {
        return $this->globalUniqueRecipients;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string[]
     * @return ConversationType
     */
    public function setGlobalUniqueRecipients(array $value)
    {
        $this->globalUniqueRecipients = $this->castValueIfNeeded("globalUniqueRecipients", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return ConversationType
     */
    public function addUniqueUnreadSenders($value)
    {
        $value = $this->castValueIfNeeded("uniqueUnreadSenders", $value);

        if ($this->uniqueUnreadSenders === null) {
            $this->uniqueUnreadSenders = array();
        }

        if (!is_array($this->uniqueUnreadSenders)) {
            $this->uniqueUnreadSenders = array($this->uniqueUnreadSenders);
        }

        $this->uniqueUnreadSenders[] = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return string[]
     */
    public function getUniqueUnreadSenders()
    {
        return $this->uniqueUnreadSenders;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string[]
     * @return ConversationType
     */
    public function setUniqueUnreadSenders(array $value)
    {
        $this->uniqueUnreadSenders = $this->castValueIfNeeded("uniqueUnreadSenders", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return ConversationType
     */
    public function addGlobalUniqueUnreadSenders($value)
    {
        $value = $this->castValueIfNeeded("globalUniqueUnreadSenders", $value);

        if ($this->globalUniqueUnreadSenders === null) {
            $this->globalUniqueUnreadSenders = array();
        }

        if (!is_array($this->globalUniqueUnreadSenders)) {
            $this->globalUniqueUnreadSenders = array($this->globalUniqueUnreadSenders);
        }

        $this->globalUniqueUnreadSenders[] = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return string[]
     */
    public function getGlobalUniqueUnreadSenders()
    {
        return $this->globalUniqueUnreadSenders;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string[]
     * @return ConversationType
     */
    public function setGlobalUniqueUnreadSenders(array $value)
    {
        $this->globalUniqueUnreadSenders = $this->castValueIfNeeded("globalUniqueUnreadSenders", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return ConversationType
     */
    public function addUniqueSenders($value)
    {
        $value = $this->castValueIfNeeded("uniqueSenders", $value);

        if ($this->uniqueSenders === null) {
            $this->uniqueSenders = array();
        }

        if (!is_array($this->uniqueSenders)) {
            $this->uniqueSenders = array($this->uniqueSenders);
        }

        $this->uniqueSenders[] = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return string[]
     */
    public function getUniqueSenders()
    {
        return $this->uniqueSenders;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string[]
     * @return ConversationType
     */
    public function setUniqueSenders(array $value)
    {
        $this->uniqueSenders = $this->castValueIfNeeded("uniqueSenders", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return ConversationType
     */
    public function addGlobalUniqueSenders($value)
    {
        $value = $this->castValueIfNeeded("globalUniqueSenders", $value);

        if ($this->globalUniqueSenders === null) {
            $this->globalUniqueSenders = array();
        }

        if (!is_array($this->globalUniqueSenders)) {
            $this->globalUniqueSenders = array($this->globalUniqueSenders);
        }

        $this->globalUniqueSenders[] = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return string[]
     */
    public function getGlobalUniqueSenders()
    {
        return $this->globalUniqueSenders;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string[]
     * @return ConversationType
     */
    public function setGlobalUniqueSenders(array $value)
    {
        $this->globalUniqueSenders = $this->castValueIfNeeded("globalUniqueSenders", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return \DateTime
     */
    public function getLastDeliveryTime()
    {
        return $this->lastDeliveryTime;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value \DateTime|string
     * @return ConversationType
     */
    public function setLastDeliveryTime(\DateTime|string $value)
    {
        $this->lastDeliveryTime = $this->castValueIfNeeded("lastDeliveryTime", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return \DateTime
     */
    public function getGlobalLastDeliveryTime()
    {
        return $this->globalLastDeliveryTime;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value \DateTime|string
     * @return ConversationType
     */
    public function setGlobalLastDeliveryTime(\DateTime|string $value)
    {
        $this->globalLastDeliveryTime = $this->castValueIfNeeded("globalLastDeliveryTime", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return ConversationType
     */
    public function addCategories($value)
    {
        $value = $this->castValueIfNeeded("categories", $value);

        if ($this->categories === null) {
            $this->categories = array();
        }

        if (!is_array($this->categories)) {
            $this->categories = array($this->categories);
        }

        $this->categories[] = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return string[]
     */
    public function getCategories()
    {
        return $this->categories;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string[]
     * @return ConversationType
     */
    public function setCategories(array $value)
    {
        $this->categories = $this->castValueIfNeeded("categories", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return ConversationType
     */
    public function addGlobalCategories($value)
    {
        $value = $this->castValueIfNeeded("globalCategories", $value);

        if ($this->globalCategories === null) {
            $this->globalCategories = array();
        }

        if (!is_array($this->globalCategories)) {
            $this->globalCategories = array($this->globalCategories);
        }

        $this->globalCategories[] = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return string[]
     */
    public function getGlobalCategories()
    {
        return $this->globalCategories;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string[]
     * @return ConversationType
     */
    public function setGlobalCategories(array $value)
    {
        $this->globalCategories = $this->castValueIfNeeded("globalCategories", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return string
     */
    public function getFlagStatus()
    {
        return $this->flagStatus;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return ConversationType
     */
    public function setFlagStatus($value)
    {
        $this->flagStatus = $this->castValueIfNeeded("flagStatus", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return string
     */
    public function getGlobalFlagStatus()
    {
        return $this->globalFlagStatus;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return ConversationType
     */
    public function setGlobalFlagStatus($value)
    {
        $this->globalFlagStatus = $this->castValueIfNeeded("globalFlagStatus", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return bool
     */
    public function isHasAttachments()
    {
        return ((bool) $this->hasAttachments);
    }

    /**
     * @autogenerated This method is safe to replace
     * @return boolean
     */
    public function getHasAttachments()
    {
        return $this->hasAttachments;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value bool
     * @return ConversationType
     */
    public function setHasAttachments($value)
    {
        $this->hasAttachments = $this->castValueIfNeeded("hasAttachments", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return bool
     */
    public function isGlobalHasAttachments()
    {
        return ((bool) $this->globalHasAttachments);
    }

    /**
     * @autogenerated This method is safe to replace
     * @return boolean
     */
    public function getGlobalHasAttachments()
    {
        return $this->globalHasAttachments;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value bool
     * @return ConversationType
     */
    public function setGlobalHasAttachments($value)
    {
        $this->globalHasAttachments = $this->castValueIfNeeded("globalHasAttachments", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return integer
     */
    public function getMessageCount()
    {
        return $this->messageCount;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value int
     * @return ConversationType
     */
    public function setMessageCount($value)
    {
        $this->messageCount = $this->castValueIfNeeded("messageCount", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return integer
     */
    public function getGlobalMessageCount()
    {
        return $this->globalMessageCount;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value int
     * @return ConversationType
     */
    public function setGlobalMessageCount($value)
    {
        $this->globalMessageCount = $this->castValueIfNeeded("globalMessageCount", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return integer
     */
    public function getUnreadCount()
    {
        return $this->unreadCount;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value int
     * @return ConversationType
     */
    public function setUnreadCount($value)
    {
        $this->unreadCount = $this->castValueIfNeeded("unreadCount", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return integer
     */
    public function getGlobalUnreadCount()
    {
        return $this->globalUnreadCount;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value int
     * @return ConversationType
     */
    public function setGlobalUnreadCount($value)
    {
        $this->globalUnreadCount = $this->castValueIfNeeded("globalUnreadCount", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return integer
     */
    public function getSize()
    {
        return $this->size;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value int
     * @return ConversationType
     */
    public function setSize($value)
    {
        $this->size = $this->castValueIfNeeded("size", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return integer
     */
    public function getGlobalSize()
    {
        return $this->globalSize;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value int
     * @return ConversationType
     */
    public function setGlobalSize($value)
    {
        $this->globalSize = $this->castValueIfNeeded("globalSize", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return ConversationType
     */
    public function addItemClasses($value)
    {
        $value = $this->castValueIfNeeded("itemClasses", $value);

        if ($this->itemClasses === null) {
            $this->itemClasses = array();
        }

        if (!is_array($this->itemClasses)) {
            $this->itemClasses = array($this->itemClasses);
        }

        $this->itemClasses[] = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return string[]
     */
    public function getItemClasses()
    {
        return $this->itemClasses;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string[]
     * @return ConversationType
     */
    public function setItemClasses(array $value)
    {
        $this->itemClasses = $this->castValueIfNeeded("itemClasses", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return ConversationType
     */
    public function addGlobalItemClasses($value)
    {
        $value = $this->castValueIfNeeded("globalItemClasses", $value);

        if ($this->globalItemClasses === null) {
            $this->globalItemClasses = array();
        }

        if (!is_array($this->globalItemClasses)) {
            $this->globalItemClasses = array($this->globalItemClasses);
        }

        $this->globalItemClasses[] = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return string[]
     */
    public function getGlobalItemClasses()
    {
        return $this->globalItemClasses;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string[]
     * @return ConversationType
     */
    public function setGlobalItemClasses(array $value)
    {
        $this->globalItemClasses = $this->castValueIfNeeded("globalItemClasses", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return string
     */
    public function getImportance()
    {
        return $this->importance;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return ConversationType
     */
    public function setImportance($value)
    {
        $this->importance = $this->castValueIfNeeded("importance", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return string
     */
    public function getGlobalImportance()
    {
        return $this->globalImportance;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return ConversationType
     */
    public function setGlobalImportance($value)
    {
        $this->globalImportance = $this->castValueIfNeeded("globalImportance", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return NonEmptyArrayOfBaseItemIdsType
     */
    public function getItemIds()
    {
        return $this->itemIds;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value NonEmptyArrayOfBaseItemIdsType
     * @return ConversationType
     */
    public function setItemIds(NonEmptyArrayOfBaseItemIdsType $value)
    {
        $this->itemIds = $this->castValueIfNeeded("itemIds", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return NonEmptyArrayOfBaseItemIdsType
     */
    public function getGlobalItemIds()
    {
        return $this->globalItemIds;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value NonEmptyArrayOfBaseItemIdsType
     * @return ConversationType
     */
    public function setGlobalItemIds(NonEmptyArrayOfBaseItemIdsType $value)
    {
        $this->globalItemIds = $this->castValueIfNeeded("globalItemIds", $value);
        return $this;
    }
}
