<?php

namespace garethp\ews\API\Type;

use garethp\ews\API\Type;

/**
 * Class representing InstantSearchPayloadType
 *
 *
 * XSD Type: InstantSearchPayloadType
 */
class InstantSearchPayloadType extends Type
{

    /**
     * @var string
     */
    protected $searchSessionId = null;

    /**
     * @var integer
     */
    protected $searchRequestId = null;

    /**
     * @var string[]
     */
    protected $resultType = null;

    /**
     * @var \garethp\ews\API\Type\ItemType[]
     */
    protected $items = null;

    /**
     * @var \garethp\ews\API\Type\ConversationType[]
     */
    protected $conversations = null;

    /**
     * @var \garethp\ews\API\Type\CalendarItemType[]
     */
    protected $calendarItems = null;

    /**
     * @autogenerated This method is safe to replace
     * @return string
     */
    public function getSearchSessionId()
    {
        return $this->searchSessionId;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return InstantSearchPayloadType
     */
    public function setSearchSessionId($value)
    {
        $this->searchSessionId = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return integer
     */
    public function getSearchRequestId()
    {
        return $this->searchRequestId;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value int
     * @return InstantSearchPayloadType
     */
    public function setSearchRequestId($value)
    {
        $this->searchRequestId = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return InstantSearchPayloadType
     */
    public function addResultType($value)
    {
        if ($this->resultType === null) {
                        $this->resultType = array();
        }

        if (!is_array($this->resultType)) {
            $this->resultType = array($this->resultType);
        }

        $this->resultType[] = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return string[]
     */
    public function getResultType()
    {
        return $this->resultType;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string[]|string
     * @return InstantSearchPayloadType
     */
    public function setResultType(array|string $value)
    {
        if (!is_array($value)) {
            $value = [$value];
        }
        $this->resultType = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value ItemType
     * @return InstantSearchPayloadType
     */
    public function addItems(ItemType $value)
    {
        if ($this->items === null) {
                        $this->items = array();
        }

        if (!is_array($this->items)) {
            $this->items = array($this->items);
        }

        $this->items[] = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return ItemType[]
     */
    public function getItems()
    {
        return $this->items;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value ItemType[]|ItemType
     * @return InstantSearchPayloadType
     */
    public function setItems(array|ItemType $value)
    {
        if (!is_array($value)) {
            $value = [$value];
        }
        $this->items = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value ConversationType
     * @return InstantSearchPayloadType
     */
    public function addConversations(ConversationType $value)
    {
        if ($this->conversations === null) {
                        $this->conversations = array();
        }

        if (!is_array($this->conversations)) {
            $this->conversations = array($this->conversations);
        }

        $this->conversations[] = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return ConversationType[]
     */
    public function getConversations()
    {
        return $this->conversations;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value ConversationType[]|ConversationType
     * @return InstantSearchPayloadType
     */
    public function setConversations(array|ConversationType $value)
    {
        if (!is_array($value)) {
            $value = [$value];
        }
        $this->conversations = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value CalendarItemType
     * @return InstantSearchPayloadType
     */
    public function addCalendarItems(CalendarItemType $value)
    {
        if ($this->calendarItems === null) {
                        $this->calendarItems = array();
        }

        if (!is_array($this->calendarItems)) {
            $this->calendarItems = array($this->calendarItems);
        }

        $this->calendarItems[] = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return CalendarItemType[]
     */
    public function getCalendarItems()
    {
        return $this->calendarItems;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value CalendarItemType[]|CalendarItemType
     * @return InstantSearchPayloadType
     */
    public function setCalendarItems(array|CalendarItemType $value)
    {
        if (!is_array($value)) {
            $value = [$value];
        }
        $this->calendarItems = $value;
        return $this;
    }
}
