<?php

namespace garethp\ews\API\Type;

use garethp\ews\API\Type;

/**
 * Class representing TaskRecurrenceType
 *
 *
 * XSD Type: TaskRecurrenceType
 */
class TaskRecurrenceType extends Type
{

    /**
     * @var \garethp\ews\API\Type\RelativeYearlyRecurrencePatternType
     */
    protected $relativeYearlyRecurrence = null;

    /**
     * @var \garethp\ews\API\Type\AbsoluteYearlyRecurrencePatternType
     */
    protected $absoluteYearlyRecurrence = null;

    /**
     * @var \garethp\ews\API\Type\RelativeMonthlyRecurrencePatternType
     */
    protected $relativeMonthlyRecurrence = null;

    /**
     * @var \garethp\ews\API\Type\AbsoluteMonthlyRecurrencePatternType
     */
    protected $absoluteMonthlyRecurrence = null;

    /**
     * @var \garethp\ews\API\Type\WeeklyRecurrencePatternType
     */
    protected $weeklyRecurrence = null;

    /**
     * @var \garethp\ews\API\Type\DailyRecurrencePatternType
     */
    protected $dailyRecurrence = null;

    /**
     * @var \garethp\ews\API\Type\DailyRegeneratingPatternType
     */
    protected $dailyRegeneration = null;

    /**
     * @var \garethp\ews\API\Type\WeeklyRegeneratingPatternType
     */
    protected $weeklyRegeneration = null;

    /**
     * @var \garethp\ews\API\Type\MonthlyRegeneratingPatternType
     */
    protected $monthlyRegeneration = null;

    /**
     * @var \garethp\ews\API\Type\YearlyRegeneratingPatternType
     */
    protected $yearlyRegeneration = null;

    /**
     * @var \garethp\ews\API\Type\NoEndRecurrenceRangeType
     */
    protected $noEndRecurrence = null;

    /**
     * @var \garethp\ews\API\Type\EndDateRecurrenceRangeType
     */
    protected $endDateRecurrence = null;

    /**
     * @var \garethp\ews\API\Type\NumberedRecurrenceRangeType
     */
    protected $numberedRecurrence = null;

    /**
     * @return RelativeYearlyRecurrencePatternType
     */
    public function getRelativeYearlyRecurrence()
    {
        return $this->relativeYearlyRecurrence;
    }

    /**
     * @return AbsoluteYearlyRecurrencePatternType
     */
    public function getAbsoluteYearlyRecurrence()
    {
        return $this->absoluteYearlyRecurrence;
    }

    /**
     * @return RelativeMonthlyRecurrencePatternType
     */
    public function getRelativeMonthlyRecurrence()
    {
        return $this->relativeMonthlyRecurrence;
    }

    /**
     * @return AbsoluteMonthlyRecurrencePatternType
     */
    public function getAbsoluteMonthlyRecurrence()
    {
        return $this->absoluteMonthlyRecurrence;
    }

    /**
     * @return WeeklyRecurrencePatternType
     */
    public function getWeeklyRecurrence()
    {
        return $this->weeklyRecurrence;
    }

    /**
     * @return DailyRecurrencePatternType
     */
    public function getDailyRecurrence()
    {
        return $this->dailyRecurrence;
    }

    /**
     * @return DailyRegeneratingPatternType
     */
    public function getDailyRegeneration()
    {
        return $this->dailyRegeneration;
    }

    /**
     * @return WeeklyRegeneratingPatternType
     */
    public function getWeeklyRegeneration()
    {
        return $this->weeklyRegeneration;
    }

    /**
     * @return MonthlyRegeneratingPatternType
     */
    public function getMonthlyRegeneration()
    {
        return $this->monthlyRegeneration;
    }

    /**
     * @return YearlyRegeneratingPatternType
     */
    public function getYearlyRegeneration()
    {
        return $this->yearlyRegeneration;
    }

    /**
     * @return NoEndRecurrenceRangeType
     */
    public function getNoEndRecurrence()
    {
        return $this->noEndRecurrence;
    }

    /**
     * @return EndDateRecurrenceRangeType
     */
    public function getEndDateRecurrence()
    {
        return $this->endDateRecurrence;
    }

    /**
     * @return NumberedRecurrenceRangeType
     */
    public function getNumberedRecurrence()
    {
        return $this->numberedRecurrence;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value RelativeYearlyRecurrencePatternType
     * @return TaskRecurrenceType
     */
    public function setRelativeYearlyRecurrence(RelativeYearlyRecurrencePatternType $value)
    {
        $this->relativeYearlyRecurrence = $this->castValueIfNeeded("relativeYearlyRecurrence", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value AbsoluteYearlyRecurrencePatternType
     * @return TaskRecurrenceType
     */
    public function setAbsoluteYearlyRecurrence(AbsoluteYearlyRecurrencePatternType $value)
    {
        $this->absoluteYearlyRecurrence = $this->castValueIfNeeded("absoluteYearlyRecurrence", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value RelativeMonthlyRecurrencePatternType
     * @return TaskRecurrenceType
     */
    public function setRelativeMonthlyRecurrence(RelativeMonthlyRecurrencePatternType $value)
    {
        $this->relativeMonthlyRecurrence = $this->castValueIfNeeded("relativeMonthlyRecurrence", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value AbsoluteMonthlyRecurrencePatternType
     * @return TaskRecurrenceType
     */
    public function setAbsoluteMonthlyRecurrence(AbsoluteMonthlyRecurrencePatternType $value)
    {
        $this->absoluteMonthlyRecurrence = $this->castValueIfNeeded("absoluteMonthlyRecurrence", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value WeeklyRecurrencePatternType
     * @return TaskRecurrenceType
     */
    public function setWeeklyRecurrence(WeeklyRecurrencePatternType $value)
    {
        $this->weeklyRecurrence = $this->castValueIfNeeded("weeklyRecurrence", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value DailyRecurrencePatternType
     * @return TaskRecurrenceType
     */
    public function setDailyRecurrence(DailyRecurrencePatternType $value)
    {
        $this->dailyRecurrence = $this->castValueIfNeeded("dailyRecurrence", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value DailyRegeneratingPatternType
     * @return TaskRecurrenceType
     */
    public function setDailyRegeneration(DailyRegeneratingPatternType $value)
    {
        $this->dailyRegeneration = $this->castValueIfNeeded("dailyRegeneration", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value WeeklyRegeneratingPatternType
     * @return TaskRecurrenceType
     */
    public function setWeeklyRegeneration(WeeklyRegeneratingPatternType $value)
    {
        $this->weeklyRegeneration = $this->castValueIfNeeded("weeklyRegeneration", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value MonthlyRegeneratingPatternType
     * @return TaskRecurrenceType
     */
    public function setMonthlyRegeneration(MonthlyRegeneratingPatternType $value)
    {
        $this->monthlyRegeneration = $this->castValueIfNeeded("monthlyRegeneration", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value YearlyRegeneratingPatternType
     * @return TaskRecurrenceType
     */
    public function setYearlyRegeneration(YearlyRegeneratingPatternType $value)
    {
        $this->yearlyRegeneration = $this->castValueIfNeeded("yearlyRegeneration", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value NoEndRecurrenceRangeType
     * @return TaskRecurrenceType
     */
    public function setNoEndRecurrence(NoEndRecurrenceRangeType $value)
    {
        $this->noEndRecurrence = $this->castValueIfNeeded("noEndRecurrence", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value EndDateRecurrenceRangeType
     * @return TaskRecurrenceType
     */
    public function setEndDateRecurrence(EndDateRecurrenceRangeType $value)
    {
        $this->endDateRecurrence = $this->castValueIfNeeded("endDateRecurrence", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value NumberedRecurrenceRangeType
     * @return TaskRecurrenceType
     */
    public function setNumberedRecurrence(NumberedRecurrenceRangeType $value)
    {
        $this->numberedRecurrence = $this->castValueIfNeeded("numberedRecurrence", $value);
        return $this;
    }
}
