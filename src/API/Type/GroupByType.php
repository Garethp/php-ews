<?php

namespace garethp\ews\API\Type;

/**
 * Class representing GroupByType
 *
 * Allows consumers to specify arbitrary groupings for FindItem queries.
 * XSD Type: GroupByType
 */
class GroupByType extends BaseGroupByType
{

    /**
     * @var \garethp\ews\API\Type\PathToUnindexedFieldType
     */
    protected $fieldURI = null;

    /**
     * @var \garethp\ews\API\Type\PathToIndexedFieldType
     */
    protected $indexedFieldURI = null;

    /**
     * @var \garethp\ews\API\Type\PathToExtendedFieldType
     */
    protected $extendedFieldURI = null;

    /**
     * @var \garethp\ews\API\Type\AggregateOnType
     */
    protected $aggregateOn = null;

    /**
     * @var boolean
     */
    protected $useCollapsibleGroups = null;

    /**
     * @var integer
     */
    protected $itemsPerGroup = null;

    /**
     * @var integer
     */
    protected $maxItemsPerGroup = null;

    /**
     * @var string[]
     */
    protected $groupsToExpand = null;

    /**
     * @autogenerated This method is safe to replace
     * @return PathToUnindexedFieldType
     */
    public function getFieldURI()
    {
        return $this->fieldURI;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value PathToUnindexedFieldType
     * @return GroupByType
     */
    public function setFieldURI(PathToUnindexedFieldType $value)
    {
        $this->fieldURI = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return PathToIndexedFieldType
     */
    public function getIndexedFieldURI()
    {
        return $this->indexedFieldURI;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value PathToIndexedFieldType
     * @return GroupByType
     */
    public function setIndexedFieldURI(PathToIndexedFieldType $value)
    {
        $this->indexedFieldURI = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return PathToExtendedFieldType
     */
    public function getExtendedFieldURI()
    {
        return $this->extendedFieldURI;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value PathToExtendedFieldType
     * @return GroupByType
     */
    public function setExtendedFieldURI(PathToExtendedFieldType $value)
    {
        $this->extendedFieldURI = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return AggregateOnType
     */
    public function getAggregateOn()
    {
        return $this->aggregateOn;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value AggregateOnType
     * @return GroupByType
     */
    public function setAggregateOn(AggregateOnType $value)
    {
        $this->aggregateOn = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return bool
     */
    public function isUseCollapsibleGroups()
    {
        return ((bool) $this->useCollapsibleGroups);
    }

    /**
     * @autogenerated This method is safe to replace
     * @return boolean
     */
    public function getUseCollapsibleGroups()
    {
        return $this->useCollapsibleGroups;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value bool
     * @return GroupByType
     */
    public function setUseCollapsibleGroups($value)
    {
        $this->useCollapsibleGroups = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return integer
     */
    public function getItemsPerGroup()
    {
        return $this->itemsPerGroup;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value int
     * @return GroupByType
     */
    public function setItemsPerGroup($value)
    {
        $this->itemsPerGroup = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return integer
     */
    public function getMaxItemsPerGroup()
    {
        return $this->maxItemsPerGroup;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value int
     * @return GroupByType
     */
    public function setMaxItemsPerGroup($value)
    {
        $this->maxItemsPerGroup = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return GroupByType
     */
    public function addGroupsToExpand($value)
    {
        if ($this->groupsToExpand === null) {
                        $this->groupsToExpand = array();
        }

        if (!is_array($this->groupsToExpand)) {
            $this->groupsToExpand = array($this->groupsToExpand);
        }

        $this->groupsToExpand[] = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return string[]
     */
    public function getGroupsToExpand()
    {
        return $this->groupsToExpand;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string[]|string
     * @return GroupByType
     */
    public function setGroupsToExpand(array|string $value)
    {
        if (!is_array($value)) {
            $value = [$value];
        }
        $this->groupsToExpand = $value;
        return $this;
    }
}
