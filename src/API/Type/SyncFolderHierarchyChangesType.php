<?php

namespace garethp\ews\API\Type;

use garethp\ews\API\Type;

/**
 * Class representing SyncFolderHierarchyChangesType
 *
 *
 * XSD Type: SyncFolderHierarchyChangesType
 */
class SyncFolderHierarchyChangesType extends Type
{

    /**
     * @var \garethp\ews\API\Type\SyncFolderHierarchyCreateOrUpdateType[]
     */
    protected $create = null;

    /**
     * @var \garethp\ews\API\Type\SyncFolderHierarchyCreateOrUpdateType[]
     */
    protected $update = null;

    /**
     * @var \garethp\ews\API\Type\SyncFolderHierarchyDeleteType[]
     */
    protected $delete = null;

    /**
     * @autogenerated This method is safe to replace
     * @param $value SyncFolderHierarchyCreateOrUpdateType
     * @return SyncFolderHierarchyChangesType
     */
    public function addCreate(SyncFolderHierarchyCreateOrUpdateType $value)
    {
        $value = $this->castValueIfNeeded("create", $value);

        if ($this->create === null) {
            $this->create = array();
        }

        if (!is_array($this->create)) {
            $this->create = array($this->create);
        }

        $this->create[] = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return SyncFolderHierarchyCreateOrUpdateType[]
     */
    public function getCreate()
    {
        return $this->create;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value
     * SyncFolderHierarchyCreateOrUpdateType[]|SyncFolderHierarchyCreateOrUpdateType
     * @return SyncFolderHierarchyChangesType
     */
    public function setCreate(array|SyncFolderHierarchyCreateOrUpdateType $value)
    {
        if (!is_array($value)) {
            $value = [$value];
        }
        $this->create = $this->castValueIfNeeded("create", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value SyncFolderHierarchyCreateOrUpdateType
     * @return SyncFolderHierarchyChangesType
     */
    public function addUpdate(SyncFolderHierarchyCreateOrUpdateType $value)
    {
        $value = $this->castValueIfNeeded("update", $value);

        if ($this->update === null) {
            $this->update = array();
        }

        if (!is_array($this->update)) {
            $this->update = array($this->update);
        }

        $this->update[] = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return SyncFolderHierarchyCreateOrUpdateType[]
     */
    public function getUpdate()
    {
        return $this->update;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value
     * SyncFolderHierarchyCreateOrUpdateType[]|SyncFolderHierarchyCreateOrUpdateType
     * @return SyncFolderHierarchyChangesType
     */
    public function setUpdate(array|SyncFolderHierarchyCreateOrUpdateType $value)
    {
        if (!is_array($value)) {
            $value = [$value];
        }
        $this->update = $this->castValueIfNeeded("update", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value SyncFolderHierarchyDeleteType
     * @return SyncFolderHierarchyChangesType
     */
    public function addDelete(SyncFolderHierarchyDeleteType $value)
    {
        $value = $this->castValueIfNeeded("delete", $value);

        if ($this->delete === null) {
            $this->delete = array();
        }

        if (!is_array($this->delete)) {
            $this->delete = array($this->delete);
        }

        $this->delete[] = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return SyncFolderHierarchyDeleteType[]
     */
    public function getDelete()
    {
        return $this->delete;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value SyncFolderHierarchyDeleteType[]|SyncFolderHierarchyDeleteType
     * @return SyncFolderHierarchyChangesType
     */
    public function setDelete(array|SyncFolderHierarchyDeleteType $value)
    {
        if (!is_array($value)) {
            $value = [$value];
        }
        $this->delete = $this->castValueIfNeeded("delete", $value);
        return $this;
    }
}
