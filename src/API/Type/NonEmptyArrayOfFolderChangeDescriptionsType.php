<?php

namespace garethp\ews\API\Type;

use garethp\ews\API\Type;

/**
 * Class representing NonEmptyArrayOfFolderChangeDescriptionsType
 *
 *
 * XSD Type: NonEmptyArrayOfFolderChangeDescriptionsType
 */
class NonEmptyArrayOfFolderChangeDescriptionsType extends Type
{

    /**
     * @var \garethp\ews\API\Type\AppendToFolderFieldType[]
     */
    protected $appendToFolderField = null;

    /**
     * @var \garethp\ews\API\Type\SetFolderFieldType[]
     */
    protected $setFolderField = null;

    /**
     * @var \garethp\ews\API\Type\DeleteFolderFieldType[]
     */
    protected $deleteFolderField = null;

    /**
     * @autogenerated This method is safe to replace
     * @param $value AppendToFolderFieldType
     * @return NonEmptyArrayOfFolderChangeDescriptionsType
     */
    public function addAppendToFolderField(AppendToFolderFieldType $value)
    {
        $value = $this->castValueIfNeeded("appendToFolderField", $value);

        if ($this->appendToFolderField === null) {
            $this->appendToFolderField = array();
        }

        if (!is_array($this->appendToFolderField)) {
            $this->appendToFolderField = array($this->appendToFolderField);
        }

        $this->appendToFolderField[] = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return AppendToFolderFieldType[]
     */
    public function getAppendToFolderField()
    {
        return $this->appendToFolderField;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value AppendToFolderFieldType[]
     * @return NonEmptyArrayOfFolderChangeDescriptionsType
     */
    public function setAppendToFolderField(array $value)
    {
        $this->appendToFolderField = $this->castValueIfNeeded("appendToFolderField", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value SetFolderFieldType
     * @return NonEmptyArrayOfFolderChangeDescriptionsType
     */
    public function addSetFolderField(SetFolderFieldType $value)
    {
        $value = $this->castValueIfNeeded("setFolderField", $value);

        if ($this->setFolderField === null) {
            $this->setFolderField = array();
        }

        if (!is_array($this->setFolderField)) {
            $this->setFolderField = array($this->setFolderField);
        }

        $this->setFolderField[] = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return SetFolderFieldType[]
     */
    public function getSetFolderField()
    {
        return $this->setFolderField;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value SetFolderFieldType[]
     * @return NonEmptyArrayOfFolderChangeDescriptionsType
     */
    public function setSetFolderField(array $value)
    {
        $this->setFolderField = $this->castValueIfNeeded("setFolderField", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value DeleteFolderFieldType
     * @return NonEmptyArrayOfFolderChangeDescriptionsType
     */
    public function addDeleteFolderField(DeleteFolderFieldType $value)
    {
        $value = $this->castValueIfNeeded("deleteFolderField", $value);

        if ($this->deleteFolderField === null) {
            $this->deleteFolderField = array();
        }

        if (!is_array($this->deleteFolderField)) {
            $this->deleteFolderField = array($this->deleteFolderField);
        }

        $this->deleteFolderField[] = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return DeleteFolderFieldType[]
     */
    public function getDeleteFolderField()
    {
        return $this->deleteFolderField;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value DeleteFolderFieldType[]
     * @return NonEmptyArrayOfFolderChangeDescriptionsType
     */
    public function setDeleteFolderField(array $value)
    {
        $this->deleteFolderField = $this->castValueIfNeeded("deleteFolderField", $value);
        return $this;
    }
}
