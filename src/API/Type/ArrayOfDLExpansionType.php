<?php

namespace garethp\ews\API\Type;

use garethp\ews\API\Type;

/**
 * Class representing ArrayOfDLExpansionType
 *
 *
 * XSD Type: ArrayOfDLExpansionType
 */
class ArrayOfDLExpansionType extends Type
{

    /**
     * @var integer
     */
    protected $indexedPagingOffset = null;

    /**
     * @var integer
     */
    protected $numeratorOffset = null;

    /**
     * @var integer
     */
    protected $absoluteDenominator = null;

    /**
     * @var boolean
     */
    protected $includesLastItemInRange = null;

    /**
     * @var integer
     */
    protected $totalItemsInView = null;

    /**
     * @var \garethp\ews\API\Type\EmailAddressType[]
     */
    protected $mailbox = null;

    /**
     * @autogenerated This method is safe to replace
     * @return integer
     */
    public function getIndexedPagingOffset()
    {
        return $this->indexedPagingOffset;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value int
     * @return ArrayOfDLExpansionType
     */
    public function setIndexedPagingOffset($value)
    {
        $this->indexedPagingOffset = $this->castValueIfNeeded("indexedPagingOffset", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return integer
     */
    public function getNumeratorOffset()
    {
        return $this->numeratorOffset;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value int
     * @return ArrayOfDLExpansionType
     */
    public function setNumeratorOffset($value)
    {
        $this->numeratorOffset = $this->castValueIfNeeded("numeratorOffset", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return integer
     */
    public function getAbsoluteDenominator()
    {
        return $this->absoluteDenominator;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value int
     * @return ArrayOfDLExpansionType
     */
    public function setAbsoluteDenominator($value)
    {
        $this->absoluteDenominator = $this->castValueIfNeeded("absoluteDenominator", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return bool
     */
    public function isIncludesLastItemInRange()
    {
        return ((bool) $this->includesLastItemInRange);
    }

    /**
     * @autogenerated This method is safe to replace
     * @return boolean
     */
    public function getIncludesLastItemInRange()
    {
        return $this->includesLastItemInRange;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value bool
     * @return ArrayOfDLExpansionType
     */
    public function setIncludesLastItemInRange($value)
    {
        $this->includesLastItemInRange = $this->castValueIfNeeded("includesLastItemInRange", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return integer
     */
    public function getTotalItemsInView()
    {
        return $this->totalItemsInView;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value int
     * @return ArrayOfDLExpansionType
     */
    public function setTotalItemsInView($value)
    {
        $this->totalItemsInView = $this->castValueIfNeeded("totalItemsInView", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value EmailAddressType
     * @return ArrayOfDLExpansionType
     */
    public function addMailbox(EmailAddressType $value)
    {
        $value = $this->castValueIfNeeded("mailbox", $value);

        if ($this->mailbox === null) {
            $this->mailbox = array();
        }

        if (!is_array($this->mailbox)) {
            $this->mailbox = array($this->mailbox);
        }

        $this->mailbox[] = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return EmailAddressType[]
     */
    public function getMailbox()
    {
        return $this->mailbox;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value EmailAddressType[]
     * @return ArrayOfDLExpansionType
     */
    public function setMailbox(array $value)
    {
        $this->mailbox = $this->castValueIfNeeded("mailbox", $value);
        return $this;
    }
}
