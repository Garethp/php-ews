<?php

namespace garethp\ews\API\Type;

/**
 * Class representing ExcludesType
 *
 *
 * XSD Type: ExcludesType
 *
 * @method ExcludesType addFieldURI(FieldURI $fieldURI)
 * @method ExcludesType addIndexedFieldURI(IndexedFieldURI $indexedFieldURI)
 * @method ExcludesType addExtendedFieldURI(ExtendedFieldURI $extendedFieldURI)
 */
class ExcludesType extends SearchExpressionType
{

    /**
     * @var \garethp\ews\API\Type\FieldURI[]
     */
    protected $fieldURI = null;

    /**
     * @var \garethp\ews\API\Type\IndexedFieldURI[]
     */
    protected $indexedFieldURI = null;

    /**
     * @var \garethp\ews\API\Type\ExtendedFieldURI[]
     */
    protected $extendedFieldURI = null;

    /**
     * @var \garethp\ews\API\Type\ExcludesValueType
     */
    protected $bitmask = null;

    /**
     * @return FieldURI[]
     */
    public function getFieldURI()
    {
        return $this->fieldURI;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value FieldURI[]
     * @return ExcludesType
     */
    public function setFieldURI(array $value)
    {
        $this->fieldURI = $this->castValueIfNeeded("fieldURI", $value);
        return $this;
    }

    /**
     * @return IndexedFieldURI[]
     */
    public function getIndexedFieldURI()
    {
        return $this->indexedFieldURI;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value IndexedFieldURI[]
     * @return ExcludesType
     */
    public function setIndexedFieldURI(array $value)
    {
        $this->indexedFieldURI = $this->castValueIfNeeded("indexedFieldURI", $value);
        return $this;
    }

    /**
     * @return ExtendedFieldURI[]
     */
    public function getExtendedFieldURI()
    {
        return $this->extendedFieldURI;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value ExtendedFieldURI[]
     * @return ExcludesType
     */
    public function setExtendedFieldURI(array $value)
    {
        $this->extendedFieldURI = $this->castValueIfNeeded("extendedFieldURI", $value);
        return $this;
    }

    /**
     * @return ExcludesValueType
     */
    public function getBitmask()
    {
        return $this->bitmask;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value ExcludesValueType
     * @return ExcludesType
     */
    public function setBitmask(ExcludesValueType $value)
    {
        $this->bitmask = $this->castValueIfNeeded("bitmask", $value);
        return $this;
    }
}
