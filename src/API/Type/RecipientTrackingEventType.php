<?php

namespace garethp\ews\API\Type;

use garethp\ews\API\Type;

/**
 * Class representing RecipientTrackingEventType
 *
 *
 * XSD Type: RecipientTrackingEventType
 */
class RecipientTrackingEventType extends Type
{

    /**
     * @var \DateTime
     */
    protected $date = null;

    protected $_typeMap = array(
        'date' => 'dateTime',
    );

    /**
     * @var \garethp\ews\API\Type\EmailAddressType
     */
    protected $recipient = null;

    /**
     * @var string
     */
    protected $deliveryStatus = null;

    /**
     * @var string
     */
    protected $eventDescription = null;

    /**
     * @var string[]
     */
    protected $eventData = null;

    /**
     * @var string
     */
    protected $server = null;

    /**
     * @var integer
     */
    protected $internalId = null;

    /**
     * @var boolean
     */
    protected $bccRecipient = null;

    /**
     * @var boolean
     */
    protected $hiddenRecipient = null;

    /**
     * @var string
     */
    protected $uniquePathId = null;

    /**
     * @var string
     */
    protected $rootAddress = null;

    /**
     * @var \garethp\ews\API\Type\TrackingPropertyType[]
     */
    protected $properties = null;

    /**
     * @autogenerated This method is safe to replace
     * @return \DateTime
     */
    public function getDate()
    {
        return $this->date;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value \DateTime|string
     * @return RecipientTrackingEventType
     */
    public function setDate(\DateTime|string $value)
    {
        $this->date = $this->castValueIfNeeded("date", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return EmailAddressType
     */
    public function getRecipient()
    {
        return $this->recipient;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value EmailAddressType
     * @return RecipientTrackingEventType
     */
    public function setRecipient(EmailAddressType $value)
    {
        $this->recipient = $this->castValueIfNeeded("recipient", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return string
     */
    public function getDeliveryStatus()
    {
        return $this->deliveryStatus;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return RecipientTrackingEventType
     */
    public function setDeliveryStatus($value)
    {
        $this->deliveryStatus = $this->castValueIfNeeded("deliveryStatus", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return string
     */
    public function getEventDescription()
    {
        return $this->eventDescription;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return RecipientTrackingEventType
     */
    public function setEventDescription($value)
    {
        $this->eventDescription = $this->castValueIfNeeded("eventDescription", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return RecipientTrackingEventType
     */
    public function addEventData($value)
    {
        $value = $this->castValueIfNeeded("eventData", $value);

        if ($this->eventData === null) {
            $this->eventData = array();
        }

        if (!is_array($this->eventData)) {
            $this->eventData = array($this->eventData);
        }

        $this->eventData[] = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return string[]
     */
    public function getEventData()
    {
        return $this->eventData;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string[]
     * @return RecipientTrackingEventType
     */
    public function setEventData(array $value)
    {
        $this->eventData = $this->castValueIfNeeded("eventData", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return string
     */
    public function getServer()
    {
        return $this->server;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return RecipientTrackingEventType
     */
    public function setServer($value)
    {
        $this->server = $this->castValueIfNeeded("server", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return integer
     */
    public function getInternalId()
    {
        return $this->internalId;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value int
     * @return RecipientTrackingEventType
     */
    public function setInternalId($value)
    {
        $this->internalId = $this->castValueIfNeeded("internalId", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return bool
     */
    public function isBccRecipient()
    {
        return ((bool) $this->bccRecipient);
    }

    /**
     * @autogenerated This method is safe to replace
     * @return boolean
     */
    public function getBccRecipient()
    {
        return $this->bccRecipient;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value bool
     * @return RecipientTrackingEventType
     */
    public function setBccRecipient($value)
    {
        $this->bccRecipient = $this->castValueIfNeeded("bccRecipient", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return bool
     */
    public function isHiddenRecipient()
    {
        return ((bool) $this->hiddenRecipient);
    }

    /**
     * @autogenerated This method is safe to replace
     * @return boolean
     */
    public function getHiddenRecipient()
    {
        return $this->hiddenRecipient;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value bool
     * @return RecipientTrackingEventType
     */
    public function setHiddenRecipient($value)
    {
        $this->hiddenRecipient = $this->castValueIfNeeded("hiddenRecipient", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return string
     */
    public function getUniquePathId()
    {
        return $this->uniquePathId;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return RecipientTrackingEventType
     */
    public function setUniquePathId($value)
    {
        $this->uniquePathId = $this->castValueIfNeeded("uniquePathId", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return string
     */
    public function getRootAddress()
    {
        return $this->rootAddress;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return RecipientTrackingEventType
     */
    public function setRootAddress($value)
    {
        $this->rootAddress = $this->castValueIfNeeded("rootAddress", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value TrackingPropertyType
     * @return RecipientTrackingEventType
     */
    public function addProperties(TrackingPropertyType $value)
    {
        $value = $this->castValueIfNeeded("properties", $value);

        if ($this->properties === null) {
            $this->properties = array();
        }

        if (!is_array($this->properties)) {
            $this->properties = array($this->properties);
        }

        $this->properties[] = $value;
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @return TrackingPropertyType[]
     */
    public function getProperties()
    {
        return $this->properties;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value TrackingPropertyType[]
     * @return RecipientTrackingEventType
     */
    public function setProperties(array $value)
    {
        $this->properties = $this->castValueIfNeeded("properties", $value);
        return $this;
    }
}
