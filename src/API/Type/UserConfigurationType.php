<?php

namespace garethp\ews\API\Type;

use garethp\ews\API\Type;

/**
 * Class representing UserConfigurationType
 *
 *
 * XSD Type: UserConfigurationType
 *
 * @method UserConfigurationType addDictionary(UserConfigurationDictionaryEntryType $dictionary)
 */
class UserConfigurationType extends Type
{

    /**
     * @var \garethp\ews\API\Type\UserConfigurationNameType
     */
    protected $userConfigurationName = null;

    /**
     * @var \garethp\ews\API\Type\ItemIdType
     */
    protected $itemId = null;

    /**
     * @var \garethp\ews\API\Type\UserConfigurationDictionaryEntryType[]
     */
    protected $dictionary = null;

    /**
     * @var string
     */
    protected $xmlData = null;

    /**
     * @var string
     */
    protected $binaryData = null;

    /**
     * @return UserConfigurationNameType
     */
    public function getUserConfigurationName()
    {
        return $this->userConfigurationName;
    }

    /**
     * @return ItemIdType
     */
    public function getItemId()
    {
        return $this->itemId;
    }

    /**
     * @return UserConfigurationDictionaryEntryType[]
     */
    public function getDictionary()
    {
        return $this->dictionary;
    }

    /**
     * @return string
     */
    public function getXmlData()
    {
        return $this->xmlData;
    }

    /**
     * @return string
     */
    public function getBinaryData()
    {
        return $this->binaryData;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value UserConfigurationNameType
     * @return UserConfigurationType
     */
    public function setUserConfigurationName(UserConfigurationNameType $value)
    {
        $this->userConfigurationName = $this->castValueIfNeeded("userConfigurationName", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value ItemIdType
     * @return UserConfigurationType
     */
    public function setItemId(ItemIdType $value)
    {
        $this->itemId = $this->castValueIfNeeded("itemId", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value UserConfigurationDictionaryEntryType[]
     * @return UserConfigurationType
     */
    public function setDictionary(array $value)
    {
        $this->dictionary = $this->castValueIfNeeded("dictionary", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return UserConfigurationType
     */
    public function setXmlData($value)
    {
        $this->xmlData = $this->castValueIfNeeded("xmlData", $value);
        return $this;
    }

    /**
     * @autogenerated This method is safe to replace
     * @param $value string
     * @return UserConfigurationType
     */
    public function setBinaryData($value)
    {
        $this->binaryData = $this->castValueIfNeeded("binaryData", $value);
        return $this;
    }
}
